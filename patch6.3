diff -Naur orig/asus-wmi.c new/asus-wmi.c
--- orig/asus-wmi.c	2023-06-14 20:37:22.000000000 -0300
+++ new/asus-wmi.c	2023-06-14 20:42:33.155655850 -0300
@@ -211,6 +211,7 @@
 	struct led_classdev lightbar_led;
 	int lightbar_led_wk;
 	struct led_classdev micmute_led;
+	struct led_classdev camera_led_on_keyboard
 	struct workqueue_struct *led_workqueue;
 	struct work_struct tpd_led_work;
 	struct work_struct wlan_led_work;
@@ -1153,6 +1154,17 @@
 	return err < 0 ? err : 0;
 }
 
+static int camera_led_on_keyboard_set(struct led_classdev *led_cdev,
+			   enum led_brightness brightness)
+{
+	int state = brightness != LED_OFF;
+	int err;
+
+	err = asus_wmi_set_devstate(ASUS_WMI_DEVID_CAMERA_LED_ON_KEYBOARD, state, NULL);
+	return err < 0 ? err : 0;
+}
+
+
 static void asus_wmi_led_exit(struct asus_wmi *asus)
 {
 	led_classdev_unregister(&asus->kbd_led);
@@ -1160,6 +1172,7 @@
 	led_classdev_unregister(&asus->wlan_led);
 	led_classdev_unregister(&asus->lightbar_led);
 	led_classdev_unregister(&asus->micmute_led);
+	led_classdev_unregister(&asus->camera_led_on_keyboard);
 
 	if (asus->led_workqueue)
 		destroy_workqueue(asus->led_workqueue);
@@ -1252,6 +1265,19 @@
 			goto error;
 	}
 
+	if (asus_wmi_dev_is_present(asus, ASUS_WMI_DEVID_CAMERA_LED_ON_KEYBOARD)) {
+		asus->camera_led_on_keyboard.name = "platform::camera";
+		asus->camera_led_on_keyboard.max_brightness = 1;
+		asus->camera_led_on_keyboard.brightness_set_blocking =
+						camera_led_on_keyboard_set;
+		asus->camera_led_on_keyboard.default_trigger = "torch";
+
+		rv = led_classdev_register(&asus->platform_device->dev,
+						&asus->camera_led_on_keyboard);
+ 		if (rv)
+ 			goto error;
+ 	}
+
 error:
 	if (rv)
 		asus_wmi_led_exit(asus);
diff -Naur orig/asus-wmi.h new/asus-wmi.h
--- orig/asus-wmi.h	2023-06-14 20:37:23.000000000 -0300
+++ new/asus-wmi.h	2023-06-14 20:42:54.796212322 -0300
@@ -21,6 +21,8 @@
 #define ASUS_WMI_BRN_DOWN	0x20
 #define ASUS_WMI_BRN_UP		0x2f
 
+#define ASUS_WMI_DEVID_CAMERA_LED_ON_KEYBOARD		0x00060079
+
 struct module;
 struct key_entry;
 struct asus_wmi;
